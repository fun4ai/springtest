<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置扫描的包，自动检测注解控制器 -->
    <!-- @Component,@Repository,@Service,@Controller-->
    <context:component-scan base-package="com.ly"/>

    <!-- 开启springMVC的注解驱动，注册RequestMappingHandlerMapper、RequestMappingHandlerAdapter两个映射类,使得url可以映射到对应的controller,以及一个ExceptionHandlerExceptionResolver -->
    <!-- 标记默认 Model 中的属性永远不应该被用于控制器方法的重定向中   -->
    <mvc:annotation-driven ignore-default-model-on-redirect="true"/>

    <!--将所有 "/" 请求直接转发给名字为 "home" 的视图-->
    <!--<mvc:view-controller path="/" view-name="home"/>-->



    <!-- 访问静态资源方案1 -->
    <mvc:default-servlet-handler/>

    <!-- 静态资源 方案2-->
    <!-- <mvc:resources location="/js/" mapping="/js/*.js" />
    <mvc:resources location="/html/" mapping="/**/*.html" /> -->
    <mvc:resources location="/" mapping="/**/*.html"/>
    <mvc:resources location="/" mapping="/**/*.js"/>
    <mvc:resources location="/" mapping="/**/*.css"/>
    <mvc:resources location="/" mapping="/**/*.png">
        <!--<mvc:resource-chain>-->
        <!--    <mvc:resource-cache/>-->
        <!--    <mvc:resolvers>-->
        <!--        <mvc:version-resolver>-->
        <!--            <mvc:content-version-strategy patterns="/**"/>-->
        <!--        </mvc:version-resolver>-->
        <!--    </mvc:resolvers>-->
        <!--</mvc:resource-chain>-->
    </mvc:resources>
    <mvc:resources location="/" mapping="/**/*.gif" cache-period="31556926">
        <!--设置cache-->
        <!--<mvc:cache-control max-age="3600" cache-public="true"/>-->
    </mvc:resources>

    <!-- 自定义拦截器 -->
    <bean id="handleMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="myInterceptor"/>
            </list>
        </property>
    </bean>
	<bean id="myInterceptor" class="com.ly.interceptor.MyInterceptor">
		<property name="openTime" value="9"/>
		<property name="closeTime" value="18"/>
	</bean>

    <!-- 地区更改拦截器 -->
    <!-- 例子，一个URL为 <http://www.sf.net/home.view?siteLanguage=nl> 的请求将会将站点语言更改为荷兰语。   -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="siteLanguage"/>
    </bean>
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
            </list>
        </property>
        <property name="mappings">
            <value>/**/*.view=someController</value>
        </property>
    </bean>


    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>


    <!-- 内容协商解析器配置 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>


    <!--Cookie解析器-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieName" value="clientlanguage"></property>

        <!-- in seconds. If set to -1, the cookie is not persisted (deleted when browser shuts down) -->
        <property name="cookieMaxAge" value="100000"></property>
    </bean>

    <!--多路上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>
    <!--必须在 web.xml 中为 DispatcherServlet 添加multipart-config部分,
        其他诸如最大文件大小或 存储位置等配置选项都必须在Servlet级别进行注册,
        因为Servlet 3.0不允许在解析器MultipartResolver的层级配置这些信息。-->
    <!--<bean id="commonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!-- 支持的最大文件大小，以字节为单位  -1不允许-->
        <!--<property name="maxUploadSize" value="1000000"/>-->
    <!--</bean>-->



    <!--自动生成视图名，默认Spring自动实例化，需要配置时可设置-->
    <!--<bean id="requestToViewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>-->
    <!--将请求url映射到控制器名上，弃用？-->
    <!--<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>-->


    <!--使用FreeMarker HTML模板和Jackson作为JSON呈现的默认视图配置内容协商视图解析-->
    <mvc:view-resolvers>
        <mvc:content-negotiation>
            <mvc:default-views>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </mvc:default-views>
        </mvc:content-negotiation>
        <mvc:freemarker cache-views="false"/>
    </mvc:view-resolvers>
    <mvc:freemarker-configurer>
        <mvc:template-loader-path location="/WEB-INF/freemarker"/>
    </mvc:freemarker-configurer>



</beans>